Strict

#GLFW_WINDOW_TITLE="Vortex2 Animation Test"
#GLFW_WINDOW_WIDTH=800
#GLFW_WINDOW_HEIGHT=600
#GLFW_WINDOW_RESIZABLE=True
#GLFW_WINDOW_SAMPLES=2

Import mojo.app
Import mojo.input
Import vortex

Class TestApp Extends App Final
Public
	Method OnCreate:Int()
		'Setup
		SetUpdateRate(0)
		SetSwapInterval(0)
		Seed = Millisecs()
	
		'Init vortex
		If Not World.Init()
			Print "Error: " + Stats.ShaderError()
			EndApp()
		End
		Print "Vendor name: " + Stats.VendorName()
		Print "Renderer name: " + Stats.RendererName()
		Print "API version name: " + Stats.APIVersionName()
		Print "Shading version name: " + Stats.ShadingVersionName()
		Print "Shader compilation: " + Stats.ShaderError()
		
		'Load font
		mFont = Cache.LoadFont("system.fnt.dat")
		
		'Create camera
		mCam = New Camera()
		mCam.SetPosition(0, 64, -128)
		mCam.SetRotation(10, 0, 0)
		mCam.ClearColor = Color.WHITE
		
		'Load swat model
		mSwatModel = New Model(Cache.LoadMesh("swat.msh.dat", "swat.skl.dat", "swat.anm.dat"))
		mSwatModel.SetPosition(-32, 32, 0)
		mSwatModel.SetRotation(0, -15, 0)
		mSwatModel.SetScale(7, 7, 7)
		mSwatModel.FPS = 16
		
		'Load dwarf model
		mDwarfModel = New Model(Cache.LoadMesh("dwarf.msh.dat", "dwarf.skl.dat", "dwarf.anm.dat"))
		mDwarfModel.SetPosition(32, 0, 0)
		mDwarfModel.SetRotation(0, 15, 0)
		mDwarfModel.FPS = 16
		
		Return False
	End
	
	Method OnUpdate:Int()	
		'End with escape key
		#If TARGET<>"html5"
		If KeyHit(KEY_ESCAPE) Then EndApp()
		#End
		
		'Update world
		World.Update()
		
		'Update camera view
		mCam.AspectRatio = Float(DeviceWidth()) / DeviceHeight()
		mCam.ViewportWidth = DeviceWidth()
		mCam.ViewportHeight = DeviceHeight()
		
		Return False
	End
	
	Method OnRender:Int()
		'Render world
		World.Render()
		
		'Setup renderer for 2D graphics
		Renderer.Setup2D(0, 0, DeviceWidth(), DeviceHeight())
		Renderer.SetColor(Color.BLACK)
		mFont.Draw(4, DeviceHeight() - 20, "Frame: " + Int(mDwarfModel.CurrentFrame))
		
		'Draw FPS
		Renderer.SetColor(Color.BLACK)
		Local text$ = Stats.FPS() + " FPS"
		mFont.Draw(2, 2, text)
		
		'Draw RenderCalls
		text = "Render calls: " + Stats.RenderCalls()
		mFont.Draw(2, 18, text)
	
		Return False
	End
Private	
	Field mFont			: Font
	Field mCam			: Camera
	Field mSwatModel	: Model
	Field mDwarfModel	: Model
End

Function Main:Int()
	New TestApp()
	Return False
End
