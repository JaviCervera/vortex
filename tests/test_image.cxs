Strict

#GLFW_WINDOW_TITLE="Vortex2 Image Test"
#GLFW_WINDOW_WIDTH=800
#GLFW_WINDOW_HEIGHT=600
#GLFW_WINDOW_RESIZABLE=True
#GLFW_WINDOW_SAMPLES=2
#OPENGL_DEPTH_BUFFER_ENABLED=True
#BINARY_FILES+="*.msh|*.skl|*.anm|*.fnt"

#If TARGET="glfw" And HOST<>"linux"
Import brl.requesters
#Endif
Import mojo.app
Import mojo.input
Import vortex

Const PRIM_POINT:Int	= 0
Const PRIM_LINE:Int		= 1
Const PRIM_RECT:Int		= 2
Const PRIM_ELLIPSE:Int	= 3

Class Prim Final
	Field type%
	Field x#, y#, z#, w#
	Field r#, g#, b#
End

Class TestApp Extends App Final
Public
	Method OnCreate:Int()
		'Setup
		SetUpdateRate(0)
		SetSwapInterval(0)
		Seed = Millisecs()
	
		'Init vortex
		If Not World.Init()
#If TARGET="glfw" And HOST<>"linux"
			Notify "Error", Stats.ShaderError(), True
#Else
			Print "Error: " + Stats.ShaderError()
#Endif
			EndApp()
		End
		Print "Vendor name: " + Stats.VendorName()
		Print "Renderer name: " + Stats.RendererName()
		Print "API version name: " + Stats.APIVersionName()
		Print "Shading version name: " + Stats.ShadingVersionName()
		Print "Shader compilation: " + Stats.ShaderError()
		
		'Load font
		mFont = Cache.LoadFont("system.fnt")
		
		'Load image
		mImage = Cache.LoadTexture("smile.png")
		
		Return False
	End
	
	Method OnUpdate:Int()	
		'End with escape key
		#If TARGET<>"html5"
		If KeyHit(KEY_ESCAPE) Then EndApp()
		#End
		
		'Update world
		World.Update()
		
		Return False
	End
	
	Method OnRender:Int()
		'Render world
		World.Render()
		
		'Draw image
		Renderer.Setup2D(0, 0, DeviceWidth(), DeviceHeight())
		Renderer.ClearColorBuffer()
		mImage.Draw((DeviceWidth() - mImage.Width)/2, (DeviceHeight() - mImage.Height)/2)
		
		'Draw FPS
		Renderer.SetColor(Color.White())
		Local text$ = Stats.FPS() + " FPS"
		mFont.Draw(2, 2, text)
	
		Return False
	End
Private
	Field mFont		: Font
	Field mImage	: Texture
End

Function Main:Int()
	New TestApp()
	Return False
End
