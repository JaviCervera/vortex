Strict

#GLFW_WINDOW_TITLE="Vortex2 Billboards Test"
#GLFW_WINDOW_WIDTH=800
#GLFW_WINDOW_HEIGHT=600
#GLFW_WINDOW_RESIZABLE=True
#GLFW_WINDOW_SAMPLES=2
#OPENGL_DEPTH_BUFFER_ENABLED=True
#BINARY_FILES+="*.msh|*.skl|*.anm|*.fnt"

#If TARGET="glfw" And HOST<>"linux"
Import brl.requesters
#Endif
Import mojo.app
Import mojo.input
Import vortex

Class TestApp Extends App Final
Public
	Method OnCreate:Int()
		'Setup
		SetUpdateRate(0)
		SetSwapInterval(0)
		Seed = Millisecs()
	
		'Init vortex
		If Not World.Init()
#If TARGET="glfw" And HOST<>"linux"
			Notify "Error", Stats.ShaderError(), True
#Else
			Print "Error: " + Stats.ShaderError()
#Endif
			EndApp()
		End
		Print "Vendor name: " + Stats.VendorName()
		Print "Renderer name: " + Stats.RendererName()
		Print "API version name: " + Stats.APIVersionName()
		Print "Shading version name: " + Stats.ShadingVersionName()
		Print "Shader compilation: " + Stats.ShaderError()
		
		'Load font
		mFont = Cache.LoadFont("system.fnt")		
		
		'Load texture
		Local smileTex:Texture = Cache.LoadTexture("smile.png")
		
		'Create camera
		mCam = Camera.Create()
		mCam.SetRotation(45, -45, 0)
		mCam.ClearColor = Color.White()
		
		'Create sprites
		Local x:Float = -8, z:Float = -8
		For Local i:Int = 0 Until 64
			Local spr:Sprite = Sprite.Create(smileTex)
			spr.SetPosition(x, 0, z)
			spr.SetSize(1, 1)
			spr.Material(0).Color = Color.RGB(Rnd(256), Rnd(256), Rnd(256))
			x += 2; If x >= 8 Then x = -8; z += 2
		Next
		
		Return False
	End
	
	Method OnUpdate:Int()	
		'End with escape key
		#If TARGET<>"html5"
		If KeyHit(KEY_ESCAPE) Then EndApp()
		#End
		
		'Update world
		World.Update()
		
		'Update camera
		mCam.AspectRatio = Float(DeviceWidth()) / DeviceHeight()
		mCam.ViewportWidth = DeviceWidth()
		mCam.ViewportHeight = DeviceHeight()
		
		'Increment camera rotation
		mCam.Yaw += 32 * Stats.DeltaTime()
		mCam.SetPosition(0, 0, 0)
		mCam.Move(0, 0, -8)
		
		Return False
	End
	
	Method OnRender:Int()
		'Render world
		World.Render()
		
		'Setup renderer for 2D graphics
		Renderer.Setup2D(0, 0, DeviceWidth(), DeviceHeight())
		
		'Draw FPS
		Renderer.SetColor(Color.Black())
		Local text$ = Stats.FPS() + " FPS"
		mFont.Draw(2, 2, text)
		
		'Draw RenderCalls
		text = "Render calls: " + Stats.RenderCalls()
		mFont.Draw(2, 18, text)
	
		Return False
	End
Private
	Field mFont	: Font
	Field mCam	: Camera
End

Function Main:Int()
	New TestApp()
	Return False
End
